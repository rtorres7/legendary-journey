apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s-deployment
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s-deployment
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/mxms-devsandbox-your-network: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
        - env:
            - name: ES_JAVA_OPTS
              value: -Xms1024m -Xmx1024m
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
          image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
          livenessProbe:
            exec:
              command:
                - curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: elasticsearch
          ports:
            - containerPort: 9200
            - containerPort: 9300
          resources:
            limits:
              memory: "2147483648"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-data
      restartPolicy: Always
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data
status: {}
