apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s-deployment
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s-deployment
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/mxms-devsandbox-your-network: "true"
        io.kompose.service: keycloak
    spec:
      containers:
        - command:
            - /opt/keycloak/bin/kc.sh
            - start-dev
            - --import-realm
            - --proxy=passthrough
            - --db=postgres
          env:
            - name: HTTP_ADDRESS_FORWARDING
              value: "true"
            - name: KC_DB
              value: keycloak
            - name: KC_DB_PASSWORD
              value: changeMe
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres-keycloak/keycloak
            - name: KC_DB_USERNAME
              value: keycloak
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME_STRICT_BACKCHANNEL
              value: "false"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_PROXY
              value: passthrough
            - name: KC_PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KC_TRANSACTION_XA_ENABLED
              value: "false"
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: password
            - name: KEYCLOAK_PASSWORD
              value: password
            - name: KEYCLOAK_USER
              value: admin
          image: quay.io/keycloak/keycloak:latest
          name: keycloak-container
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /opt/keycloak/data/import/myrealm.json
              name: keycloak-claim0
      restartPolicy: Always
      volumes:
        - name: keycloak-claim0
          persistentVolumeClaim:
            claimName: keycloak-claim0
status: {}
