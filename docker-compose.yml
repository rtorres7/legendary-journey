version: "3.8"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./client:/data
      - /data/node_modules
    environment:
      - API_URL=http://localhost:8081/
      - WATCHPACK_POLLING=true
    container_name: client

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./server:/data
      - /data/node_modules
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - DATABASE_URL=server-database:27017
    container_name: server

  server-database:
    build: server/src/mongo
    ports:
      - 27017:27017
    restart: always
    volumes:
      - /data/db
    container_name: database
    environment:
      #MONGO_INITDB_ROOT_USERNAME: {{USERNAME}}
      #MONGO_INITDB_ROOT_PASSWORD: {{PWD}}
      MONGO_INITDB_DATABASE: articles

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.6.1
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  elasticsearch-data:
    driver: local
